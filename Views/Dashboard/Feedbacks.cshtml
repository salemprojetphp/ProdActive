@model _.Models.FeedbackDashboardViewModel;

@{
    ViewData["Title"] = "Feedbacks";
    Layout = "./_DashboardNav.cshtml";
}

@section Styles{
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
}

<div class="tab-content tab-content-basic">
    <div class="tab-pane fade show active" id="overview" role="tabpanel" aria-labelledby="overview">
        <div class="row">
            <div class="col-sm-12">
                <div class="statistics-details d-flex align-items-center justify-content-between">
                    <div class="specific-statistics" style="width:30% ; display: flex; flex-direction: row; justify-content: space-between;">                    
                        <div>
                            <p class="statistics-title">Positive Feedbacks</p>
                            <h3 class="rate-percentage">@Model.PositiveFeedbacks</h3>
                        </div>
                        <div>
                            <p class="statistics-title">Negative Feedbacks</p>
                            <h3 class="rate-percentage">@Model.NegativeFeedbacks</h3>
                        </div>
                    </div>
                    <div class="total-statistics">
                        <div class="d-none d-md-block">
                            <p class="statistics-title">Total Feedbacks</p>
                            <h3 class="rate-percentage">@Model.TotalFeedbacks</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-8 d-flex flex-column">
                <div class="row flex-grow">
                <div class="col-12 col-lg-4 col-lg-12 grid-margin stretch-card">
                    <div class="card card-rounded">
                    <div class="card-body">
                        <div class="d-sm-flex justify-content-between align-items-start">
                            <div>
                                <h4 class="card-title card-title-dash">Feedback Line Chart</h4>
                                <h5 class="card-subtitle card-subtitle-dash">Tracking feedback tendencies through the week</h5>
                            </div>
                            <div id="feedbackLine-legend">
                                <ul style="display: flex;">
                                    <li style="list-style: none; color: #737F8B; font-size: 12px; display: inline-block; margin-right: 1rem;">
                                        <span style="background-color: #1F3BB3; width: 10px; height: 10px; border-radius: 100%; display: inline-block; margin-right: 10px;"></span>Positive Feedbacks
                                    </li>
                                    <li style="list-style: none; color: #737F8B; font-size: 12px; display: inline-block; margin-right: 1rem;"">
                                        <span style="background-color: #52CDFF; width: 10px; height: 10px; border-radius: 100%; display: inline-block; margin-right: 10px;"></span>Negative Feedbacks
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="chartjs-wrapper mt-4">
                            <canvas id="feedbackLine" width=""></canvas>
                        </div>
                    </div>
                    </div>
                </div>
                </div>
            </div>
            <div class="col-lg-4 d-flex flex-column">
                <div class="row flex-grow">
                    <div class="col-md-6 col-lg-12 grid-margin stretch-card">
                        <div class="card card-rounded">
                            <div class="card-body">
                                <h4 class="card-title card-title-dash">Feedback Breakdown</h4>
                                <div class="row">
                                    <div class="col-12">
                                        <canvas id="feedbackDoughnutChart" style="max-height: 160px; margin-bottom: 10px; margin-top: 10px;"></canvas>
                                    </div>
                                </div>
                                <div id="feedbackLine-legend">
                                    <ul style="display: flex;">
                                        <li style="list-style: none; color: #737F8B; font-size: 12px; display: inline-block; margin-right: 1rem;">
                                            <span style="background-color: #6389E9; width: 10px; height: 10px; border-radius: 100%; display: inline-block; margin-right: 10px;"></span>Positive Feedbacks:
                                            <h4 class="mb-0 fw-bold" id="positivePercentage" style="color: black;">0%</span>
                                        </li>
                                        <li style="list-style: none; color: #737F8B; font-size: 12px; display: inline-block; margin-right: 1rem;">
                                            <span style="background-color: #FEDFDD; width: 10px; height: 10px; border-radius: 100%; display: inline-block; margin-right: 10px;"></span>Negative Feedbacks:
                                            <h4 class="mb-0 fw-bold" id="negativePercentage" style="color: black;">0%</span>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row flex-grow">
            <div class="col-12 grid-margin stretch-card">
                <div class="card card-rounded">
                    <div class="card-body">
                        <div class="d-sm-flex justify-content-between align-items-start">
                        <div>
                            <h4 class="card-title card-title-dash">Feedback Overview</h4>
                            <p class="card-subtitle card-subtitle-dash">All Feedbacks available </p>
                        </div>
                        <div>
                        </div>
                            <div class="dropdown">
                                 <!-- Filter Button with Dropdown -->
                                <button class="btn btn-warning dropdown-toggle" type="button" id="dropdownMenuIconButton1" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: #fff;">
                                    <i class="fas fa-filter"></i> Filter Feedback
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuIconButton1">
                                    <h6 class="dropdown-header">Filter by</h6>
                                    <div class="dropdown-divider"></div>
                                    <!-- Filter by Date -->
                                    <a class="dropdown-item" href="#" id="filterByDateAsc">By Date: Ascending</a>
                                    <a class="dropdown-item" href="#" id="filterByDateDesc">By Date: Descending</a>

                                    <!-- Filter by Rating -->
                                    <a class="dropdown-item" href="#" id="filterByPositive">By Rating: Positive</a>
                                    <a class="dropdown-item" href="#" id="filterByNegative">By Rating: Negative</a>
                                </div>
                          </div>
                        </div>
                        <div class="table-responsive  mt-1" style="max-height: 400px; overflow-y: auto;">
                            <table class="table select-table" id="feedbackTable">
                                <thead>
                                    <tr>
                                        <th>Subject</th>
                                        <th style="width: 50px word-wrap: break-word;">FeedbacK</th>
                                        <th>Date</th>
                                        <th style="display: flex; justify-content: center;">Rating</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Table rows will be dynamically generated here -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Cache the tbody element to avoid repeated DOM lookups
            var tbody = $('#feedbackTable tbody');
            
            // Clear any existing rows before appending new ones
            tbody.empty();

            // Array to hold the feedbacks (this will be filtered later)
            var feedbackData = [];

            // Fetch feedback data from the API
            $.ajax({
                url: '/Feedback/GetAllFeedbacks', // API endpoint
                method: 'GET',
                success: function (data) {
                    if (data && data.length > 0) {
                        feedbackData = data; // Store the fetched feedback data

                        // Render table initially with all data
                        renderTable(feedbackData);
                    } else {
                        // If no feedback data is found, display a message
                        tbody.append('<tr><td colspan="5" class="text-center">No feedback available.</td></tr>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching feedback:', error);
                    alert("There was an error fetching the feedback data. Please try again later.");
                }
            });

            // Function to render the table rows based on feedback data
            function renderTable(feedbacks) {
                tbody.empty(); // Clear existing rows
                var rows = feedbacks.map(function (feedback) {
                    // Format date for better readability
                    var formattedDate = new Date(feedback.date).toLocaleDateString();

                    // Determine the thumbs-up or thumbs-down based on rating
                    var thumbsIcon = '';
                    if (feedback.rating === 1) {
                        thumbsIcon = '<i class="fas fa-thumbs-up fa-2x" style="color: grey;"></i>'; // Thumbs-up icon (green)
                    } else if (feedback.rating === 0) {
                        thumbsIcon = '<i class="fas fa-thumbs-down fa-2x" style="color: grey;"></i>'; // Thumbs-down icon (red)
                    }

                    // Create a row for each feedback
                    return `
                        <tr>
                            <td>
                                <div class="d-flex">
                                    <div>
                                        <h6>${feedback.subject}</h6>
                                    </div>
                                </div>
                            </td>
                            <td style="width: 50px">
                                <h6>${feedback.message}</h6>
                            </td>
                            <td>${formattedDate}</td>
                            <td>
                                <div class="thumb-container" style="display: flex; justify-content: center;">
                                    <span>${thumbsIcon}</span>
                                </div>
                            </td>
                        </tr>
                    `;
                }).join(""); // Combine all rows into a single string

                // Append the generated rows to the table body
                tbody.append(rows);
            }

            // Apply filters when a dropdown item is clicked
            $('#filterByDateAsc').click(function() {
                var filteredFeedbacks = filterByDate('asc');
                renderTable(filteredFeedbacks);
            });

            $('#filterByDateDesc').click(function() {
                var filteredFeedbacks = filterByDate('desc');
                renderTable(filteredFeedbacks);
            });

            $('#filterByPositive').click(function() {
                var filteredFeedbacks = filterByRating(1); // Positive feedbacks
                renderTable(filteredFeedbacks);
            });

            $('#filterByNegative').click(function() {
                var filteredFeedbacks = filterByRating(0); // Negative feedbacks
                renderTable(filteredFeedbacks);
            });

            // Filter feedbacks by date (ascending or descending)
            function filterByDate(order) {
                return feedbackData.sort(function(a, b) {
                    var dateA = new Date(a.date);
                    var dateB = new Date(b.date);
                    if (order === 'asc') {
                        return dateA - dateB; // Ascending order
                    } else {
                        return dateB - dateA; // Descending order
                    }
                });
            }

            // Filter feedbacks by rating (1 for positive, 0 for negative)
            function filterByRating(rating) {
                return feedbackData.filter(function(feedback) {
                    return feedback.rating === rating;
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Fetch feedback data from the API
            $.ajax({
                url: '/Dashboard/FeedbacksData', // Your controller's action URL
                method: 'GET',
                success: function (data) {
                    if (data && data.currentWeekPositive) {
                        // Days of the week for the x-axis (Sunday to Saturday)
                        var days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
                        
                        // Data for the chart
                        var positiveData = data.currentWeekPositive; // The positive feedback counts per day
                        var negativeData = data.currentWeekNegative; // The negative feedback counts per day

                        // Chart.js - create the performance line chart
                        var ctx = document.getElementById('feedbackLine').getContext('2d');
                        var graphGradient = ctx.createLinearGradient(5, 0, 5, 100);
                        graphGradient.addColorStop(0, 'rgba(26, 115, 232, 0.18)');
                        graphGradient.addColorStop(1, 'rgba(26, 115, 232, 0.02)');
                        var graphGradient2 = ctx.createLinearGradient(100, 0, 50, 150);
                        graphGradient2.addColorStop(0, 'rgba(0, 208, 255, 0.19)');  // Red for negative feedback
                        graphGradient2.addColorStop(1, 'rgba(0, 208, 255, 0.03)');  // Red lighter

                        // Create a new chart instance
                        new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: days,  // Labels: Days of the week
                                datasets: [{
                                    label: 'Positive Feedbacks',
                                    data: positiveData,  // Positive feedback counts per day
                                    backgroundColor: graphGradient,
                                    borderColor: '#1F3BB3',
                                    borderWidth: 1.5,
                                    fill: true,
                                    pointBorderWidth: 1,
                                    pointRadius: 4,
                                    pointHoverRadius: 2,
                                    pointBackgroundColor: '#1F3BB3',
                                    pointBorderColor: '#fff',
                                },
                                {
                                    label: 'Negative Feedbacks',
                                    data: negativeData,  // Negative feedback counts per day
                                    backgroundColor: graphGradient2,
                                    borderColor: '#52CDFF',
                                    borderWidth: 1.5,
                                    fill: true,
                                    pointBorderWidth: 1,
                                    pointRadius: 4,
                                    pointHoverRadius: 2,
                                    pointBackgroundColor: '#52CDFF',
                                    pointBorderColor: '#fff',
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                elements: {
                                    line: {
                                        tension: 0.4
                                    }
                                }, 
                                scales: {
                                    y: {
                                        ticks: {
                                            beginAtZero: false, // Start Y-axis from 0
                                        }
                                    },
                                    x: {
                                        ticks: {
                                            autoSkip: true,
                                            maxTicksLimit: 7,
                                        }
                                    }
                                },
                                plugins: {
                                    legend: {
                                        display: false
                                    }
                                }
                            }
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching feedback data for the chart:', error);
                    alert("There was an error fetching the feedback data for the chart.");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            // Fetch the percentages of all feedbacks (positive and negative) from the API
            $.ajax({
                url: '/Dashboard/FeedbackPercentages', // New controller action URL
                method: 'GET',
                success: function (data) {
                    if (data) {
                        // Data from the API (positive and negative percentages)
                        var positivePercentage = data.positivePercentage;
                        var negativePercentage = data.negativePercentage;

                        // Update the legend with the percentages
                        $('#positivePercentage').text(positivePercentage.toFixed(2) + '%');
                        $('#negativePercentage').text(negativePercentage.toFixed(2) + '%');

                        // Create the doughnut chart
                        var ctx = document.getElementById('feedbackDoughnutChart').getContext('2d');
                        new Chart(ctx, {
                            type: 'doughnut',
                            data: {
                                labels: ['Positive Feedbacks', 'Negative Feedbacks'],
                                datasets: [{
                                    label: 'Feedback Distribution',
                                    data: [positivePercentage, negativePercentage], // The percentages
                                    backgroundColor: ['#6389E9', '#FEDFDD'], 
                                    borderColor: ['#fff', '#fff'],
                                    borderWidth: 2
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                cutout: '65%',
                                plugins: {
                                    legend: {
                                        display: false // Remove the legend
                                    },
                                    tooltip: {
                                        callbacks: {
                                            label: function (tooltipItem) {
                                                return tooltipItem.label + ': ' + tooltipItem.raw.toFixed(2) + '%';
                                            }
                                        }
                                    }
                                }
                            }
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching feedback percentages for the doughnut chart:', error);
                    alert("There was an error fetching the feedback percentages for the chart.");
                }
            });
        });
    </script>
}