@{
    ViewData["Title"] = "Attendance";
    Layout = "./_DashboardNav.cshtml";
}

@using _.Models 
@model AttendanceDashboardViewModel
<!DOCTYPE html>
<html>
<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/gaugeJS@1.3.5/dist/gauge.min.js"></script>
    <style>
        /* Styling for the layout */
        .container {
            display: flex;
            justify-content: space-between;
        }
        .chart-container {
            width: 60%;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .info-container {
            width: 35%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        .info-box {
            background-color: white;
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
            text-align: center;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .info-box h3 {
            margin: 0;
        }
        .info-box p {
            font-size: 24px;
            font-weight: bold;
        }
        .chart-title {
            text-align: center;
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 10px;
        }
        /* Gauge Chart Styling */
        .gauge-container {
            text-align: center;
            padding-top: 20px;
        }
    </style>
</head>
<body>
    <h1>Attendance Dashboard</h1>
    <div class="container">
        <!-- Combined Line Chart -->
        <div class="chart-container">
            <h2 class="chart-title">Attendance Metrics</h2>
            <canvas id="combinedLineChart"></canvas>
            <!-- Leave Utilization Gauge Chart -->
            <div class="gauge-container">
                <h2 class="chart-title">Leave Utilization Rate</h2>
                <canvas id="gaugeChart"></canvas>
            </div>
        </div>
        <!-- Info Panel with Late Arrivals and Pending Leave Requests -->
        <div class="info-container">
            <!-- Late Arrivals -->
            <div class="info-box">
                <h3>Late Arrivals</h3>
                <p>@Model.LateArrivals.Values.Sum()</p>
            </div>
            <!-- Pending Leave Requests Pie Chart -->
            <div class="info-box">
                <h3>Leave Requests by Status</h3>
                <canvas id="pieChart"></canvas>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Serialize data from the model
            var leaveFrequencyData = @Html.Raw(Json.Serialize(Model.LeaveFrequency ?? new Dictionary<string, int>()));
            var avgWorkingHoursData = @Html.Raw(Json.Serialize(Model.AvgWorkingHours ?? new Dictionary<string, double>()));
            var attendanceRateData = @Html.Raw(Json.Serialize(Model.AttendanceRate ?? new Dictionary<string, double>()));
            var leaveUtilizationData = @Html.Raw(Json.Serialize(Model.LeaveUtilizationRate ?? new Dictionary<string, double>()));
            var employeeNames = Object.keys(leaveFrequencyData);
            // Combined Line Chart
            var combinedLineCtx = document.getElementById('combinedLineChart').getContext('2d');
            new Chart(combinedLineCtx, {
                type: 'line',
                data: {
                    labels: employeeNames,
                    datasets: [
                        {
                            label: 'Leave Count',
                            data: Object.values(leaveFrequencyData),
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 2,
                            fill: false
                        },
                        {
                            label: 'Average Working Hours',
                            data: Object.values(avgWorkingHoursData),
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 2,
                            fill: false
                        },
                        {
                            label: 'Attendance Rate',
                            data: Object.values(attendanceRateData),
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 2,
                            fill: false
                        }
                    ]
                },
                options: {
                    scales: {
                        y: { beginAtZero: true, title: { display: true, text: 'Metrics' } },
                        x: { title: { display: true, text: 'Employee Names' } }
                    },
                    plugins: {
                        tooltip: { mode: 'index', intersect: false }
                    }
                }
            });
            // Pie Chart for Leave Requests
            var pieChartCtx = document.getElementById('pieChart').getContext('2d');
            new Chart(pieChartCtx, {
                type: 'pie',
                data: {
                    labels: ['Pending', 'Accepted', 'Rejected'],
                    datasets: [{
                        data: [
                            @Model.PendingLeaveRequests.GetValueOrDefault("0", 0),
                            @Model.AcceptedLeaveRequests.GetValueOrDefault("1", 0),
                            @Model.RejectedLeaveRequests.GetValueOrDefault("-1", 0)
                        ],
                        backgroundColor: ['#Ff6384', '#36a2eb', '#4BC0C0'],
                        borderColor: ['#fff', '#fff', '#fff'],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'top' },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw + ' requests';
                                }
                            }
                        }
                    }
                }
            });
            // Gauge Chart for Leave Utilization Rate
            var gaugeCanvas = document.getElementById("gaugeChart");
            var gaugeOpts = {
                angle: 0,
                lineWidth: 0.2,
                radiusScale: 1,
                pointer: { length: 0.6, strokeWidth: 0.05, color: '#000' },
                limitMax: false,
                limitMin: false,
                colorStart: '#Ff6384',
                colorStop: '#4BC0C0',
                strokeColor: '#EEE',
                generateGradient: true,
                highDpiSupport: true
            };
            var gauge = new Gauge(gaugeCanvas).setOptions(gaugeOpts);
            gauge.maxValue = 100;
            gauge.setMinValue(0);
            gauge.animationSpeed = 32;
            // Calculate overall average leave utilization rate
            var utilizationValues = Object.values(leaveUtilizationData);
            var avgUtilization = utilizationValues.length ? utilizationValues.reduce((a, b) => a + b, 0) / utilizationValues.length : 0;
            gauge.set(avgUtilization);
        });
    </script>
</body>
</html>